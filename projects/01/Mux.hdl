// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux.hdl

/**
 * Multiplexor:
 * out = a if sel == 0
 *       b otherwise
 */

CHIP Mux {
    IN a, b, sel;
    OUT out;

    PARTS:
    // Canonical representation
    //Not(in = a  , out = nota);
    //Not(in = b  , out = notb);
    //Not(in = sel, out = nots);

    //And(a = a    , b = notb, out = aANDnotb);
    //And(a = notb , b = nots, out = aANDnots);
    //And(a = a    , b = b   , out = aANDb);
    //And(a = b    , b = nots, out = bANDnots);
    //And(a = nota , b = b   , out = notaANDb);
    //And(a = b    , b = sel , out = bANDs);

    //And(a = aANDnotb, b = nots, out = and1);
    //And(a = aANDb   , b = nots, out = and2);
    //And(a = notaANDb, b = sel , out = and3);
    //And(a = aANDb   , b = sel , out = and4);

    //Or(a = and1, b = and2, out = or1);
    //Or(a = and3, b = and4, out = or2);
    //Or(a = or1 , b = or2,  out = out);

    // Smarter solution
    Not(in = sel, out = nots);

    And(a = nots, b = a, out = notsa);
    And(a = sel , b = b, out = sb);

    Or(a = notsa, b = sb, out = out);
}
